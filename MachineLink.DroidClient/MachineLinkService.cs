//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by SlSvcUtil, version 5.0.61118.0
// 
namespace MachineLink.Service
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DownloadProgramResponse", Namespace="http://schemas.datacontract.org/2004/07/MachineLink.Service")]
    public partial class DownloadProgramResponse : object
    {
        
        private System.Exception ErrorField;
        
        private string ProgramField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception Error
        {
            get
            {
                return this.ErrorField;
            }
            set
            {
                this.ErrorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Program
        {
            get
            {
                return this.ProgramField;
            }
            set
            {
                this.ProgramField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IMachineLinkService")]
public interface IMachineLinkService
{
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMachineLinkService/DownloadProgram", ReplyAction="http://tempuri.org/IMachineLinkService/DownloadProgramResponse")]
    System.IAsyncResult BeginDownloadProgram(System.AsyncCallback callback, object asyncState);
    
    MachineLink.Service.DownloadProgramResponse EndDownloadProgram(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMachineLinkService/TestMethod", ReplyAction="http://tempuri.org/IMachineLinkService/TestMethodResponse")]
    System.IAsyncResult BeginTestMethod(System.AsyncCallback callback, object asyncState);
    
    string EndTestMethod(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IMachineLinkServiceChannel : IMachineLinkService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class DownloadProgramCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public DownloadProgramCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public MachineLink.Service.DownloadProgramResponse Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((MachineLink.Service.DownloadProgramResponse)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class TestMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public TestMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class MachineLinkServiceClient : System.ServiceModel.ClientBase<IMachineLinkService>, IMachineLinkService
{
    
    private BeginOperationDelegate onBeginDownloadProgramDelegate;
    
    private EndOperationDelegate onEndDownloadProgramDelegate;
    
    private System.Threading.SendOrPostCallback onDownloadProgramCompletedDelegate;
    
    private BeginOperationDelegate onBeginTestMethodDelegate;
    
    private EndOperationDelegate onEndTestMethodDelegate;
    
    private System.Threading.SendOrPostCallback onTestMethodCompletedDelegate;
    
    private BeginOperationDelegate onBeginOpenDelegate;
    
    private EndOperationDelegate onEndOpenDelegate;
    
    private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
    
    private BeginOperationDelegate onBeginCloseDelegate;
    
    private EndOperationDelegate onEndCloseDelegate;
    
    private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
    
    public MachineLinkServiceClient()
    {
    }
    
    public MachineLinkServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public MachineLinkServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MachineLinkServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MachineLinkServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public System.Net.CookieContainer CookieContainer
    {
        get
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                return httpCookieContainerManager.CookieContainer;
            }
            else
            {
                return null;
            }
        }
        set
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                httpCookieContainerManager.CookieContainer = value;
            }
            else
            {
                throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                        "ookieContainerBindingElement.");
            }
        }
    }
    
    public event System.EventHandler<DownloadProgramCompletedEventArgs> DownloadProgramCompleted;
    
    public event System.EventHandler<TestMethodCompletedEventArgs> TestMethodCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IMachineLinkService.BeginDownloadProgram(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginDownloadProgram(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    MachineLink.Service.DownloadProgramResponse IMachineLinkService.EndDownloadProgram(System.IAsyncResult result)
    {
        return base.Channel.EndDownloadProgram(result);
    }
    
    private System.IAsyncResult OnBeginDownloadProgram(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((IMachineLinkService)(this)).BeginDownloadProgram(callback, asyncState);
    }
    
    private object[] OnEndDownloadProgram(System.IAsyncResult result)
    {
        MachineLink.Service.DownloadProgramResponse retVal = ((IMachineLinkService)(this)).EndDownloadProgram(result);
        return new object[] {
                retVal};
    }
    
    private void OnDownloadProgramCompleted(object state)
    {
        if ((this.DownloadProgramCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.DownloadProgramCompleted(this, new DownloadProgramCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void DownloadProgramAsync()
    {
        this.DownloadProgramAsync(null);
    }
    
    public void DownloadProgramAsync(object userState)
    {
        if ((this.onBeginDownloadProgramDelegate == null))
        {
            this.onBeginDownloadProgramDelegate = new BeginOperationDelegate(this.OnBeginDownloadProgram);
        }
        if ((this.onEndDownloadProgramDelegate == null))
        {
            this.onEndDownloadProgramDelegate = new EndOperationDelegate(this.OnEndDownloadProgram);
        }
        if ((this.onDownloadProgramCompletedDelegate == null))
        {
            this.onDownloadProgramCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDownloadProgramCompleted);
        }
        base.InvokeAsync(this.onBeginDownloadProgramDelegate, null, this.onEndDownloadProgramDelegate, this.onDownloadProgramCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IMachineLinkService.BeginTestMethod(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginTestMethod(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string IMachineLinkService.EndTestMethod(System.IAsyncResult result)
    {
        return base.Channel.EndTestMethod(result);
    }
    
    private System.IAsyncResult OnBeginTestMethod(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((IMachineLinkService)(this)).BeginTestMethod(callback, asyncState);
    }
    
    private object[] OnEndTestMethod(System.IAsyncResult result)
    {
        string retVal = ((IMachineLinkService)(this)).EndTestMethod(result);
        return new object[] {
                retVal};
    }
    
    private void OnTestMethodCompleted(object state)
    {
        if ((this.TestMethodCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.TestMethodCompleted(this, new TestMethodCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void TestMethodAsync()
    {
        this.TestMethodAsync(null);
    }
    
    public void TestMethodAsync(object userState)
    {
        if ((this.onBeginTestMethodDelegate == null))
        {
            this.onBeginTestMethodDelegate = new BeginOperationDelegate(this.OnBeginTestMethod);
        }
        if ((this.onEndTestMethodDelegate == null))
        {
            this.onEndTestMethodDelegate = new EndOperationDelegate(this.OnEndTestMethod);
        }
        if ((this.onTestMethodCompletedDelegate == null))
        {
            this.onTestMethodCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTestMethodCompleted);
        }
        base.InvokeAsync(this.onBeginTestMethodDelegate, null, this.onEndTestMethodDelegate, this.onTestMethodCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
    }
    
    private object[] OnEndOpen(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
        return null;
    }
    
    private void OnOpenCompleted(object state)
    {
        if ((this.OpenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void OpenAsync()
    {
        this.OpenAsync(null);
    }
    
    public void OpenAsync(object userState)
    {
        if ((this.onBeginOpenDelegate == null))
        {
            this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
        }
        if ((this.onEndOpenDelegate == null))
        {
            this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
        }
        if ((this.onOpenCompletedDelegate == null))
        {
            this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
        }
        base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
    }
    
    private object[] OnEndClose(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
        return null;
    }
    
    private void OnCloseCompleted(object state)
    {
        if ((this.CloseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CloseAsync()
    {
        this.CloseAsync(null);
    }
    
    public void CloseAsync(object userState)
    {
        if ((this.onBeginCloseDelegate == null))
        {
            this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
        }
        if ((this.onEndCloseDelegate == null))
        {
            this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
        }
        if ((this.onCloseCompletedDelegate == null))
        {
            this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
        }
        base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
    }
    
    protected override IMachineLinkService CreateChannel()
    {
        return new MachineLinkServiceClientChannel(this);
    }
    
    private class MachineLinkServiceClientChannel : ChannelBase<IMachineLinkService>, IMachineLinkService
    {
        
        public MachineLinkServiceClientChannel(System.ServiceModel.ClientBase<IMachineLinkService> client) : 
                base(client)
        {
        }
        
        public System.IAsyncResult BeginDownloadProgram(System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[0];
            System.IAsyncResult _result = base.BeginInvoke("DownloadProgram", _args, callback, asyncState);
            return _result;
        }
        
        public MachineLink.Service.DownloadProgramResponse EndDownloadProgram(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            MachineLink.Service.DownloadProgramResponse _result = ((MachineLink.Service.DownloadProgramResponse)(base.EndInvoke("DownloadProgram", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginTestMethod(System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[0];
            System.IAsyncResult _result = base.BeginInvoke("TestMethod", _args, callback, asyncState);
            return _result;
        }
        
        public string EndTestMethod(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("TestMethod", _args, result)));
            return _result;
        }
    }
}
